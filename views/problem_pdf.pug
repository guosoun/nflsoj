doctype html
html(lang="zh")
  head
    title= contest_title
    link(rel='stylesheet', href='/cdnjs/semantic-ui/2.4.1/semantic.min.css')
  style.
    body {
      font-family: 'SimSun'
    }
    h1, h2 {
      font-family: 'Simhei'
    }
    table {
      width: 100%;     /* 表格宽度占满容器 */
      border-collapse: collapse; /* 边框折叠为单一边框 */
    }

    table, th, td {
      border: 1px solid black; /* 设置边框粗细为3px，颜色为黑色 */
    }

    th, td {
      text-align: center; /* 单元格内容居中对齐 */
      padding: 3px; /* 单元格内部填充 */
    }

  body
    div(style='page-break-after: always;')
      h1(style='text-align: center;')= contest_title
      table(style='margin: 0 auto;')
        thead 
          tr
            th(style='width: 20%;') 题目名称
            each problem in problems
              th= problem.title
        tbody
          tr
            td(style='width: 20%;') 题目类型
            script.
              cons
              function translateProblemType(type) {
                const typeMap = {
                  'traditional': '传统',
                  'submit-answer': '提交答案',
                  'interaction': '交互',
                  'remote': '远程'
                };
                return typeMap[type] || type;
              }

            each problem in problems
              td= problem.type
          tr 
            td(style='width: 20%;') 目录
            each problem in problems
              td
                code= problem.english_title
          tr 
            td(style='width: 20%;') 可执行文件名
            each problem in problems
              td
                code= problem.english_title
          tr
            td(style='width: 20%;') 输入文件名
            each problem in problems
              td
                code= problem.english_title + '.in'
          tr
            td(style='width: 20%;') 输出文件名
            each problem in problems
              td
                code= problem.english_title + '.out'
          tr
            td(style='width: 20%;') 每个测试点时限
            each problem in problems
              td
                code= problem.time_limit + ' ms'
          tr 
            td(style='width: 20%;') 内存限制
            each problem in problems
              td
                code= problem.memory_limit + ' MB'
      h3 提交源程序文件名
      table(style='margin: 0 auto;')
        tbody
          tr
            td(style='width: 20%;') 对于 C++ 语言 
            each problem in problems
                td
                  code= problem.english_title + '.cpp'
      h3 编译选项
      table(style='margin: 0 auto;')
        tbody
          tr
            td(style='width: 20%;')  对于 C++ 语言 
            td(class='class="center aligned') 
              code -O2 -std=c++14 -static
    each problem in problems
      h1(style='text-align: center;')= `${problem.title}（${problem.english_title}）`
      div(style='page-break-after: always;')
        if problem.description 
          h2 【题目描述】
          p!= problem.description
        if problem.input_format 
          h2 【输入格式】
          p!= problem.input_format
        if problem.output_format 
          h2 【输出格式】
          p!= problem.output_format
        if problem.example 
          h2 【样例】
          p!= problem.example
        if problem.limit_and_hint 
          h2 【数据范围】
          p!= problem.limit_and_hint